name: Rust
on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
jobs:
  clippy:
    name: Clippy
    runs-on: arc-runner-set-k8s
    container: ${{ vars.RUNNER_IMAGE_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Clippy
        run: |
          bazel --bazelrc=.bazelrc.ci build clippy
  harbor-image-x86_64:
    name: Build JDH Image - x86_64
    runs-on: arc-runner-set-k8s
    container: ${{ vars.RUNNER_IMAGE_URL }}
    needs: [clippy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.home.local
          username: ${{ secrets.HARBOR_USER}}
          password: ${{ secrets.HARBOR_TOKEN}}
      - name: Bazel Build
        run: |
          bazel --bazelrc=.bazelrc.ci build jaydanhoward_image_amd64
  harbor-image-x86_64-push:
    if: github.event_name == 'push'
    name: Push JDH Image - x86_64
    runs-on: arc-runner-set-k8s
    container: ${{ vars.RUNNER_IMAGE_URL }}
    needs: [harbor-image-x86_64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.home.local
          username: ${{ secrets.HARBOR_USER}}
          password: ${{ secrets.HARBOR_TOKEN}}
      - name: Bazel Build
        run: |
          bazel --bazelrc=.bazelrc.ci run jaydanhoward_image_amd64_push
  harbor-image-arm64:
    needs: [clippy]
    name: Build JDH Image - arm64
    runs-on: arc-runner-set-k8s
    container: ${{ vars.RUNNER_IMAGE_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.home.local
          username: ${{ secrets.HARBOR_USER}}
          password: ${{ secrets.HARBOR_TOKEN}}
      - name: Bazel Push
        run: |
          bazel --bazelrc=.bazelrc.ci build jaydanhoward_image_arm64
  harbor-image-arm64-push:
    if: github.event_name == 'push'
    needs: [harbor-image-arm64]
    name: Push JDH Image - arm64
    runs-on: arc-runner-set-k8s
    container: ${{ vars.RUNNER_IMAGE_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.home.local
          username: ${{ secrets.HARBOR_USER}}
          password: ${{ secrets.HARBOR_TOKEN}}
      - name: Bazel Push
        run: |
          bazel --bazelrc=.bazelrc.ci build jaydanhoward_image_arm64_push
  harbor-image-list-push:
    if: github.event_name == 'push'
    name: Push JDH Multi-arch Image
    runs-on: arc-runner-set
    container: ${{ vars.RUNNER_IMAGE_URL }}
    needs: [harbor-image-x86_64-push, harbor-image-arm64-push]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: harbor.home.local
          username: ${{ secrets.HARBOR_USER}}
          password: ${{ secrets.HARBOR_TOKEN}}
      - name: Pull New Images
        run: |
          docker pull harbor.home.local/library/jaydanhoward:latest-arm64
          docker pull harbor.home.local/library/jaydanhoward:latest-amd64
      - name: Create Index List
        run: |
          docker manifest create harbor.home.local/library/jaydanhoward:latest \
            harbor.home.local/library/jaydanhoward:latest-arm64 --arch arm64 --os linux \
            harbor.home.local/library/jaydanhoward:latest-amd64 ----arch amd64 --os linux
      - name: Push Index List
        run: docker manifest push harbor.home.local/library/jaydanhoward:latest
  harbor-ligthouse-image:
    name: Build lighthouse image
    runs-on: arc-runner-set
    container: ${{ vars.RUNNER_IMAGE_URL }}
    needs: [clippy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: harbor.home.local
          username: ${{ secrets.HARBOR_USER}}
          password: ${{ secrets.HARBOR_TOKEN}}
      - name: Build Image
        run: "docker build -t harbor.home.local/library/lighthouse:latest .\ndocker push harbor.home.local/library/lighthouse:latest \n"
        working-directory: lighthouse
  harbor-ligthouse-image-push:
    if: github.event_name == 'push'
    name: Push lighthouse image
    runs-on: arc-runner-set
    container: ${{ vars.RUNNER_IMAGE_URL }}
    needs: [harbor-ligthouse-image]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: harbor.home.local
          username: ${{ secrets.HARBOR_USER}}
          password: ${{ secrets.HARBOR_TOKEN}}
      - name: Build Image
        run: docker build -t harbor.home.local/library/lighthouse:latest .
        working-directory: lighthouse
      - name: Push Image
        run: docker push harbor.home.local/library/lighthouse:latest
        working-directory: lighthouse
