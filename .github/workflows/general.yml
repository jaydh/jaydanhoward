name: Rust
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
jobs:
  test:
    name: Test
    runs-on: arc-runner-set
    container: ${{ vars.RUNNER_IMAGE_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Run tests
        run: cargo test
  fmt:
    name: Rustfmt
    runs-on: arc-runner-set
    container: ${{ vars.RUNNER_IMAGE_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check
  clippy:
    name: Clippy
    runs-on: arc-runner-set
    container: ${{ vars.RUNNER_IMAGE_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - name: Linting
        run: cargo clippy # -- -D warnings
  harbor-image:
    name: Push jaydanhoward image to Harbor
    needs: [test, fmt, clippy]
    runs-on: arc-runner-set
    container: ${{ vars.RUNNER_IMAGE_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Copy ca cert
        run: |
          sudo cp /certs/ca/tls.crt /etc/ssl/certs/ca-certificates.crt
      - name: Create BuildKit Configuration
        run: |
          cat <<EOF > buildkitd.toml
          [harbor.home.local]
            http = false
            insecure = false
            ca=["/etc/ssl/certs/ca-certificates.crt"]
          EOF
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
          config: buildkitd.toml
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: harbor.home.local
          username: ${{ secrets.HARBOR_USER}}
          password: ${{ secrets.HARBOR_TOKEN}}
      - name: BuildAndPushImageOnHarbor
        run: docker buildx build  --platform linux/amd64,linux/arm64 -t harbor.home.local/library/jaydanhoward:latest --push .
  harbor-ligthouse-image:
    name: Push lighthouse image to Harbor
    needs: [test, fmt, clippy]
    runs-on: arc-runner-set
    container: ${{ vars.RUNNER_IMAGE_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Copy ca cert
        run: |
          sudo cp /certs/ca/tls.crt /etc/ssl/certs/ca-certificates.crt
      - name: Create BuildKit Configuration
        run: |
          cat <<EOF > buildkitd.toml
          [harbor.home.local]
            http = false
            insecure = false
            ca=["/etc/ssl/certs/ca-certificates.crt"]
          EOF
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
          config: buildkitd.toml
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: harbor.home.local
          username: ${{ secrets.HARBOR_USER}}
          password: ${{ secrets.HARBOR_TOKEN}}
      - name: BuildAndPushImageOnHarbor
        run: docker buildx build -t harbor.home.local/library/lighthouse:latest --push .
        working-directory: lighthouse
